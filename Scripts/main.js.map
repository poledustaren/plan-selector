{
  "version": 3,
  "file": "main.js",
  "sourceRoot": "",
  "sources": [
    "main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "logOn = false\r\nselectionItemCounter = 0\r\n# массив вершин - которые кружки\r\narrayOfShapes = []\r\n# массив полигонов\r\npathArray = []\r\ncounterCircle = 0\r\n# контекстное меню\r\ngroupContextMenu = -1\r\n\r\n\r\nlog = (text) =>\r\n  if logOn\r\n    console.log text\r\n\r\nstyles =\r\n  style:\r\n    fill: \"black\"\r\n    stroke: \"#880e00\"\r\n    strokeWidth: 20\r\n  styleCircle:\r\n    fill: \"#ff1\"\r\n    stroke: \"#ff1737\"\r\n    strokeWidth: 1\r\n    opacity: 0.5\r\n  contextMenu_block:\r\n    fill: \"#406b88\"\r\n    strokeWidth: 10\r\n    opacity: 0.3\r\n  styleButton:\r\n    class: \"option_button\"\r\n  styleButtonPushed:\r\n    class: \"option_button pushed\"\r\n  styleText:\r\n    fill: \"#fbfffd\"\r\n  styleInfoRect:\r\n    fill: \"#fbfffd\"\r\n    strokeWidth: 3\r\n    stroke: \"#000000\"\r\n\r\nff =\r\n  class_operation:\r\n    addClass: (toClass, forAddClass)->\r\n      $(\".#{toClass}\").each ->\r\n        original = $(@).attr \"class\"\r\n        $(@).attr \"class\", \"#{original} #{forAddClass}\"\r\n    removeClass: (toClass, removedClass)->\r\n      $(\".#{toClass}\").each ->\r\n        original = $(@).attr \"class\"\r\n        original = original.replace(removedClass,\"\")\r\n        $(@).attr \"class\", \"#{original}\"\r\n\r\n  color_operation:\r\n    doRed: (className)->\r\n      $(\".#{className}\").attr\r\n        fill: \"red\"\r\n    doGreen: (className)->\r\n      $(\".#{className}\").attr\r\n        fill: \"green\"\r\n    doBlue: (className)->\r\n      $(\".#{className}\").attr\r\n        fill: \"blue\"\r\n     \r\n  data_operation:\r\n    set_data: (jQObject,fieldName,value)->\r\n      jQObject.data(fieldName,value)\r\n      jQObject.attr(\"data-#{fieldName}\",value)  \r\n    delete_data: (jQObject,fieldName)->\r\n      jQObject.data(fieldName,\"\")\r\n      jQObject.attr(\"data-#{fieldName}\",\"\")\r\n  \r\n  \r\n  selected_items_operation:\r\n    bind_with_area: (jQitem)->\r\n      item_id = jQitem.data().id      \r\n      ff.data_operation.set_data($(\".need_bind\"),\"item_id\",item_id)\r\n      ff.class_operation.addClass(\"need_bind\", \"alrady_beended\")\r\n      ff.class_operation.removeClass(\"alrady_beended\", \"need_bind\")\r\n      ff.class_operation.removeClass(\"alrady_beended\", \"not_binded\")\r\n      jQitem.addClass(\"item_binded\")\r\n      \r\n    delete_binded:(itemId)->\r\n      $(\".item_binded[data-id='#{itemId}']\").removeClass(\"item_binded\")\r\n\r\n  path_operation:\r\n    init_clicked_path: (object,itemClass)=>\r\n      object.click ->\r\n        notBinded = object.attr().class.indexOf(\"alrady_beended\")<0\r\n        if notBinded\r\n          ff.class_operation.removeClass(\"plane_area\",\"need_bind\")\r\n          ff.class_operation.addClass(itemClass,\"need_bind\")\r\n    clear_path_binding: (object)->\r\n      item_id = object.data(\"item_id\")\r\n      ff.selected_items_operation.delete_binded(item_id)\r\n      ff.data_operation.delete_data($(\"[data-item_id=#{item_id}]\"),\"item_id\")\r\n  \r\n  init_operation:\r\n    show_data: (paper,data)->\r\n      data = $(\"#SvgCoords\").val()\r\n\r\n      if data\r\n        data = data.replaceAll(\"«\",\"\\\"\").replaceAll(\"»\",\"\\\"\")\r\n        parsedData = JSON.parse(data)\r\n        for item in parsedData\r\n          idJq=\"selection_item_#{selectionItemCounter}\"\r\n          stylePolygon  =\r\n            class : \"plane_area alrady_beended selection_item_#{selectionItemCounter} \"\r\n            id:idJq\r\n            stroke: \"#000000\"\r\n            strokeWidth: 1\r\n            opacity: 0.5\r\n            fill: \"#2d8816\"\r\n\r\n          pathPolygon = paper\r\n            .path item.path\r\n            .attr stylePolygon\r\n\r\n          ff.data_operation.set_data($(\"##{idJq}\"),\"item_id\",item.item_id)\r\n          $(\".svg_plan_item[data-id='#{item.item_id}']\").addClass(\"item_binded\")\r\n          selectionItemCounter++\r\n \r\ninitButtons = \r\n  initSvgPlanItemClick: (initNewPath)->\r\n    $(\".svg_plan_item\").click ->\r\n      thisIsNotBindedShit = !$(this).hasClass(\"item_binded\")\r\n      weHaveAreaForBind = $(\".need_bind\").length>0\r\n\r\n      if thisIsNotBindedShit && weHaveAreaForBind\r\n        pressedItem = $(this)\r\n        ff.selected_items_operation.bind_with_area(pressedItem)\r\n        initNewPath()\r\n        \r\n  save_selected_area: ()->\r\n    \r\n    $(\"#save_area_svg\").click ->\r\n      resultObject=[]\r\n      $(\".alrady_beended\").each ->\r\n        item=\r\n          item_id:$(this).data(\"item_id\")\r\n          path:$(this).attr(\"d\")\r\n        resultObject.push(item)\r\n        \r\n      $(\"#SvgCoords\").val(JSON.stringify(resultObject))\r\n      \r\n      $(\"form\").submit()      \r\n     \r\n    \r\n        \r\n  \r\n      \r\n\r\nwindow.onload = () =>\r\n  \r\n  paper = Snap '#plan-body'\r\n  \r\n  imagePath = $(\".image_for_area\").attr(\"xlink:href\") \r\n  \r\n  $(\"imagePath\").load ->\r\n    console.log @.width\r\n    console.log @.height\r\n    \r\n  ff.init_operation.show_data(paper,\"\")\r\n  styles.stylePolygon  = \r\n    class : \"plane_area not_binded selection_item_#{selectionItemCounter} \"\r\n    id:\"selection_item_#{selectionItemCounter}\"\r\n    stroke: \"#000000\"\r\n    strokeWidth: 1\r\n    opacity: 0.5\r\n    fill: \"#2d8816\"\r\n    \r\n  itemForDelete = \"selection_item_#{selectionItemCounter}\"\r\n  \r\n  selectionItemCounter++\r\n  \r\n  ## добавляем полигон\r\n  path = paper\r\n    .path \"\"\r\n    .attr styles.stylePolygon \r\n  \r\n  \r\n  ff.path_operation.init_clicked_path(path,\"selection_item_0\")\r\n  \r\n  ## событие на кнопку\r\n  clearDots = =>\r\n    for dot in arrayOfShapes\r\n      do (dot) =>\r\n        dot.remove()\r\n        \r\n  ## очищаем массив для построения полигона\r\n  clearPath = ->\r\n    pathArray = []\r\n    \r\n  deletePathPolygon= (name) ->\r\n    id=name\r\n    dataId=$(\"##{id}\").attr(\"data-item_id\")\r\n    ff.path_operation.clear_path_binding($(\"##{id}\"))\r\n    $(\"##{id}\").remove()\r\n  ## получим центр координат в полигоне\r\n  getCoordinateForInfoRectangle= (pathCoodinates)=>\r\n    arrayOfCoordinates =\r\n      pathCoodinates\r\n        .split \"L\"\r\n        .map (v) ->\r\n          v\r\n            .replace(\" Z\",\"\")\r\n            .replace(\"M \",\"\")\r\n\r\n    result_coordinate =\r\n      averageX: 0\r\n      averageY: 0\r\n\r\n    lenghtPath = arrayOfCoordinates.length\r\n    for coordinate in arrayOfCoordinates\r\n      result_coordinate.averageX += coordinate.split(',')[0] / lenghtPath\r\n      result_coordinate.averageY += coordinate.split(',')[1] / lenghtPath\r\n\r\n\r\n    result_coordinate\r\n  ##\r\n  createInfoReactangle = (result_coordinate,selectionItemCounter)=>\r\n    paper.rect result_coordinate.averageX, result_coordinate.averageY,100,100\r\n      .attr styles.styleInfoRect\r\n      .class = \"inforRectangle inforRectangle_id_#{selectionItemCounter}\"\r\n  \r\n  addEventClickWithInfo = (className,selectionItemCounter)=>\r\n    $(\".#{className}\")\r\n      .click ->\r\n        pathInfo = $(this).attr('d')\r\n        coordinatesForRect = getCoordinateForInfoRectangle pathInfo\r\n        createInfoReactangle coordinatesForRect,selectionItemCounter\r\n    \r\n  ## заново инициализируем path и создаем полигон \r\n  createNewPath = ->\r\n    itemClass= \"selection_item_#{selectionItemCounter}\"\r\n    className=\"plane_area not_binded selection_item_#{selectionItemCounter}\"\r\n    selectionItemCounter++\r\n    \r\n    styles.stylePolygon.class = className\r\n    styles.stylePolygon.id = itemClass\r\n      \r\n    \r\n    path = paper\r\n      .path \"\"\r\n      .attr styles.stylePolygon\r\n    \r\n    ff.path_operation.init_clicked_path(path,itemClass)  \r\n  \r\n  ## подготовка и добавленеи нового полигона\r\n  initNewPolygon = ->\r\n    clearPath()\r\n    clearDots()\r\n    createNewPath()\r\n\r\n  initNewPolygon()\r\n  \r\n  initPressButton = (button)->\r\n    button      \r\n      .mouseover ()->      \r\n        @attr styles.styleButtonPushed\r\n      .mouseout ()->        \r\n        @attr styles.styleButton\r\n  \r\n  ## перерисовываем путь\r\n  updatePath = ->\r\n    first = pathArray[0]\r\n    pathString = \"M #{first.x},#{first.y}\"\r\n    for node in pathArray.slice 1\r\n      pathString += \"L#{node.x},#{node.y}\"\r\n    pathString += \" Z\"\r\n    path.attr d: pathString\r\n    \r\n  paper.mousedown (e)->\r\n    log e.target.tagName\r\n    if e.target.tagName is 'image' && e.which == 1\r\n      styles.styleCircle\r\n        .class = \"selection_circle_#{counterCircle}\"\r\n      counterCircle++\r\n      circlePoint = paper\r\n        .circle e.offsetX, e.offsetY, 5\r\n        .attr styles.styleCircle\r\n        .data 'i', pathArray.length        \r\n        .drag (dx,dy,x,y) ->\r\n          corrector_for_mouse_y = -235\r\n          corrector_for_mouse_x = -20\r\n          @attr\r\n            cx: x+corrector_for_mouse_x\r\n            cy: y+corrector_for_mouse_y\r\n          currentNode = pathArray[@data 'i']\r\n          currentNode.x = x+corrector_for_mouse_x\r\n          currentNode.y = y+corrector_for_mouse_y\r\n          updatePath()\r\n          \r\n      arrayOfShapes.push(circlePoint)\r\n      log \"массив форм #{arrayOfShapes}\"\r\n      \r\n      pathArray.push\r\n        x: e.offsetX\r\n        y: e.offsetY\r\n      \r\n      updatePath()\r\n   \r\n  #инициализируе кнопку добавления новой херни\r\n  contextmenu_init_addButton = (e) ->\r\n    contextmenu_add = paper\r\n      .rect e.offsetX, e.offsetY, 200, 40\r\n      .attr styles.styleButton\r\n      .click ->\r\n        initNewPolygon()\r\n\r\n    text_add = paper\r\n      .text e.offsetX+3, e.offsetY+14,\"Добавить еще\"\r\n      .attr styles.styleText\r\n      .click ->\r\n        initNewPolygon()\r\n\r\n    initPressButton contextmenu_add\r\n    paper.g contextmenu_add, text_add\r\n        \r\n  #инициализируе кнопку удаления херни\r\n  contextmenu_init_deleteButton = (e) ->\r\n    # квадратик \r\n    contextmenu_delete = paper\r\n      .rect e.offsetX, e.offsetY+40, 200, 40\r\n      .attr styles.styleButton\r\n      .click ->\r\n        deletePathPolygon(itemForDelete)\r\n        initNewPolygon()\r\n\r\n    # текст для удаления \r\n    text_delete = paper\r\n      .text e.offsetX+3, e.offsetY+14+40,\"Удалить\"\r\n      .attr styles.styleText\r\n      .click ->\r\n        deletePathPolygon(itemForDelete)\r\n        initNewPolygon()\r\n\r\n    initPressButton contextmenu_delete\r\n    paper.g contextmenu_delete, text_delete\r\n  \r\n  # нажимаем правую кнопку если то чокаво\r\n  $(\"svg\").contextmenu (e)->\r\n    itemForDelete = e.target.id\r\n    \r\n    hasSelectionItemClass = e.target.className.baseVal.toString().indexOf(\"selection_item\")>0\r\n    \r\n    # логируем всякую херню\r\n    log \"id нажатой области - #{e.target.id}\"\r\n    log \"есть ли selection_item класс у нажатой области - #{hasSelectionItemClass}\"\r\n    \r\n    if groupContextMenu!=-1\r\n      groupContextMenu.clear()\r\n    \r\n    groupContextMenu = paper.g()\r\n    \r\n    # пытаемся понять куда мы конкретно тыкнули \r\n    if hasSelectionItemClass\r\n      # если ткнули в область разметки\r\n      context_delete = contextmenu_init_deleteButton(e)     \r\n      groupContextMenu = paper.g context_delete ##,condext_bind      \r\n    else\r\n      # если ткнули просто в картинку например\r\n      context_add = contextmenu_init_addButton(e)\r\n      groupContextMenu = paper.g context_add    \r\n    \r\n    false\r\n    \r\n  $(\"svg\").click (e)->    \r\n    if groupContextMenu!=-1 && e.which ==1\r\n      groupContextMenu.remove()\r\n  \r\n  #привяжем клики по областям\r\n  initButtons.initSvgPlanItemClick(initNewPolygon)\r\n  initButtons.save_selected_area()\r\n  \r\n    "
  ]
}